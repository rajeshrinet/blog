{
  
    
        "post0": {
            "title": "PyStokes",
            "content": "About . . PyStokes is a numerical library for phoresis and Stokesian hydrodynamics in Python. It uses a grid-free method, combining the integral representation of Laplace and Stokes equations, spectral expansion, and Galerkin discretization, to compute phoretic and hydrodynamic interactions between spheres with slip boundary conditions on their surfaces. The library also computes suspension scale quantities, such as rheological response, energy dissipation and fluid flow. The computational cost is quadratic in the number of particles and upto 1e5 particles have been accommodated on multicore computers. The library has been used to model suspensions of microorganisms, synthetic autophoretic particles and self-propelling droplets. . Active particles . The PyStokes library has been specifically designed for studying phoretic and hydrodynamic interactions in suspensions of active particles. Active particles are a new class of colloids which create flow - even when stationary - due to large surface gradients from local nonequilibrium processes. These nonequilibrium processes may be due to the motion of cilia, as in microorganisms (Brennen &amp; Winet, 1977) or osmotic flows of various kinds in response to spontaneously generated gradients of phoretic fields (Ebbens &amp; Howse, 2010) at the colloidal particle. The latter, often called autophoresis, is a generalisation of well-known phoretic phenomena including, inter alia, electrophoresis (electric field), diffusiophoresis (chemical field) and thermophoresis (temperature field) that occur in response to externally imposed gradients of phoretic fields (Anderson, 1989). . Hydrodynamic and phoretic interactions between active particles in a viscous fluid are central to the understanding of their collective dynamics. Under experimentally relevant conditions, the motion of the fluid is governed by the Stokes equation and that of the phoretic field, if one is present, by the Laplace equation. The “activity” appears in these equations as boundary conditions on the particle surfaces that prescribe the slip velocity in the Stokes equation and flux of the phoretic field in the Laplace equation . . The slip velocity and the phoretic flux are related by a linear constitutive law that can be derived from a detailed analysis of the boundary layer physics (Anderson, 1989). The Stokes and Laplace equations are coupled by this linear constitutive law only at the particle boundaries. The linearity of the governing equations and the coupling boundary conditions allows for a formally exact solution of the problem of determining the force per unit area on the particle surfaces. This formally exact solution can be approximated to any desired degree of accuracy by a truncated series expansion in a complete basis of functions on the particle boundaries. This, in turn, leads to an efficient and accurate numerical method for computing hydrodynamic and phoretic interactions between active particles. . . Research applications of PyStokes . In what follows, we present we present a selected list of research applications of PyStokes. . Controlled optofluidic crystallization of colloids tethered at interfaces . Reference: A Caciagli, R Singh, D Joshi, R Adhikari, and E Eiser, Physical Review Letters 125 (6), 068001 (2020) . . The interplay between laser light, trapped particles, and fluid flow can produce counterintuitive effects in optical tweezing. Here we uncover an attractive, long-ranged, non-equilibrium force field centered on an optically trapped particle near a water-oil interface, produced by local heating and mediated by global fluid flow. This causes surrounding untrapped colloids, tethered to the interface but allowed to diffusely freely along it, to crystallize around the force center. In this configuration, the non-equilibrium force is the gradient of a potential, of strength proportional to the local heating, which, surprisingly, allows for an effective equilibrium description. Our results open unexplored routes to optofluidic manipulation and assembly of colloidal particles. . See synopsis: Small Spheres Freeze When Hot . . Periodic orbits of active particles . Reference: A Bolitho, R Singh, R Adhikari, Physical Review Letters 124 (8), 088003 (2020) . . Our work shows that the oscillatory dynamics of a pair of active particles near a boundary, best exemplified by the fascinating dance of the green algae Volvox, can be understood in terms of Hamiltonian mechanics, even though the system does not conserve energy. At the heart of this dance, which is a limit cycle of a dynamical system, is a Hamiltonian, damped by gravitational torque and driven by fluid flow reflected off the boundary. For small oscillations, this Hamiltonian is identical to that of a pendulum and, like a metronome, sets the beat of the dance. For large oscillations, the beat can be evaluated with the same mathematics as for a pendulum, and when damping and driving are taken into account, agrees very well with experiment. This establishes without doubt that the enigmatic Volvox dance, rather than being an evolutionarily selected biological phenomenon, is a physical phenomenon that can be understood fully in terms of the familiar concepts of mechanics. Our study highlights the significance of fluid flows and their distortion by boundaries in active matter and shows that the applicability of Hamiltonian mechanics extends beyond its intended domain of energy-conserving systems to time-irreversible, dissipative, active systems. . . Crystallization at a plane no-slip surface . Reference: R Singh, R Adhikari, Physical Review Letters 117, 228002 (2016) . . It is well-known that crystallization of colloids approximating hard spheres is due, paradoxically, to the higher entropy of the ordered crystalline state compared to that of the disordered liquid state. Out of equilibrium, no such general principle is available to rationalize crystallization. Here, we identify a new non-equilibrium mechanism, associated with entropy production rather than entropy gain, which drives crystallization of active colloids near plane walls. This is a new mechanism of spontaneous symmetry breaking, with no analogue in equilibrium. The properties of the non-equilibrium crystal, consequently, show remarkable exceptions: strong dissipation suppresses propagating phonon-modes and turns them diffusive, yet, activity enhances the elastic moduli of the crystal. An active crystal, then, has reduced phase fluctuations and is less susceptible to the destruction of long-ranged order, even though it is two-dimensional. The investigation of topological phase transitions in these systems presents, therefore, exciting avenues for future research. There is an excellent qualitative and quantitative match of our results with two recent experiments. . Kinetics of crystallization . . Attractive monopolar flow of active particles near a plane surface . . Self-assembly of hexagonal cluster of active particles . . . Flow-induced phase separation is controlled by boundary conditions . Reference: S Thutupalli, D Geyer, R Singh, R Adhikari, H Stone Proceedings of the National Academy of Sciences 115, 5403 (2018) . Active colloids - microorganisms, synthetic microswimmers, and self-propelling droplets - are known to self-organize into ordered structures at fluid-solid boundaries. Their mutual entrainment in the attractive component of the flow has been postulated as a possible mechanism underlying this phenomenon. In this work, we describe this fluid-induced phase separation by combining experiments, theory, and numerical simulations, and demonstrate its control by changing the hydrodynamic boundary conditions. We show that, for flow in Hele-Shaw cells, metastable lines or stable traveling bands of colloids can be obtained by varying the cell height, while for flow bounded by a plane, dynamic crystallites are formed. At a plane no-slip wall, these crystallites are characterized by a continuous out-of-plane flux of particles that circulate and re-enter at the crystallite edges, thereby stabilizing them, while the crystallites are strictly two-dimensional at a plane where the tangential stress vanishes. These results are elucidated by deriving, using the boundary-domain integral formulation of Stokes flow, exact expressions for dissipative, long-ranged, many-body active forces and torques between them in respective boundary conditions. The resulting numerical simulations of motion under the action of the active forces and torques are in excellent agreement with experiments. Our work demonstrates the control of phase separation of active particles by boundary conditions. . Vortex-stabilised crystallites at a plane no-slip surface . . Two-dimensional crystallites at a plane no-shear surface . . Traveling bands in a Hele-Shaw cell . . . . . Autophoretic arrest of flow-induced phase separation . Reference: R Singh, R Adhikari, ME Cates, The Journal of Chemical Physics 151, 044901 (2019) . Recent experiments have reported the arrest of phase separation in a suspension of active colloids at a plane wall. Attractive hydrodynamic forces are known to cause the aggregation of active colloids at a plane wall. This flow-induced phase separation, in absence of any other interactions, drives the system to a complete phase separation. Here, we describe the role of chemical interactions in modifying this flow-induced phase separation of active colloids at a plane wall. We derive chemohydrodynamic forces and torques on colloids in the limit of rapid diffusion and slow viscous flow. We find that near a plane wall, these forces can be expressed as a gradient of a non-equilibrium potential. This potential can be varied from being purely repulsive to purely attractive by tuning the chemical activity of the colloids. The arrest of phase separation can then be understood from the emergence of a barrier in the effective potential. . . . Active particles in external potentials . The simplest system in which an interplay of non-uniform external fields, activity and Brownian motion can be studied is an active colloid confined in a three-dimensional harmonic potential. We consider two examples: (a) active particles in a single trap, and (b) active particles in a lattice of harmonic traps (optical lattice). . Non-equilibrium convective rolls of confined active particles in a single harmonic trap . Reference: R Singh, S Ghose, R Adhikari, Journal of Statistical Mechanics: Theory and Experiment 2015 (6), P06017 (2015) . . Dynamics in an optical lattice . Reference: R Singh, R Adhikari, Journal of Physics Communications 2, 025025 (2018) . . Dynamics of 1024 contractile and extensile active colloids in a spherical confinement . Reference: R Singh, R Adhikari, Journal of Physics Communications 2, 025025 (2018) . In this examples we consider apolar particles confined in a sphere. We show that the dynamics is different for contractile and extensile particles respectively. . . . Electrohydrodynamic flows: self-assembly of nanoparticles . Reference: D Sarkar, R Singh, A Som, CK Manju, M Ganayee, R Adhikari, T Pradeep, The Journal of Physical Chemistry C 122, 17777 (2018) . In the work, we consider a suspension of driven particles. Unlike an active colloid, a driven colloid can move only under the effect of external potentials. Here, we study the motion of particles under electrohydrodynamic flow in a rectangular geometry. Electrohydrodynamics is the study of the effects of electrostatic forces on fluid flow. Electrohydrodynamic flows result from the motion of free charges on the surface of a fluid by application of a tangential electric field along with the container (Melcher and Taylor, Annu Rev Fluid Mech 1969). In our case, free charged ions are sprayed using electrospray on the air-liquid interface of a rectangular container with an electrode, which provides a tangential electric field. The spray from the cone deposits charges at the air-liquid interface which is then set into motion by the tangential electric field due to the electrode. Thus, the formation of nanoparticle-nanosheet (NP-NS) is observed at the air-liquid interface. . .",
            "url": "https://rajeshrinet.github.io/blog/markdown/2020/07/19/pystokes.html",
            "relUrl": "/markdown/2020/07/19/pystokes.html",
            "date": " • Jul 19, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://rajeshrinet.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://rajeshrinet.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://rajeshrinet.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://rajeshrinet.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}